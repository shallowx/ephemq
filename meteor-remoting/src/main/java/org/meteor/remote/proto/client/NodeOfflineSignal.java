// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.proto

package org.meteor.remote.proto.client;

/**
 * Protobuf type {@code meteor.protobuf.NodeOfflineSignal}
 */
public final class NodeOfflineSignal extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:meteor.protobuf.NodeOfflineSignal)
        NodeOfflineSignalOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use NodeOfflineSignal.newBuilder() to construct.
    private NodeOfflineSignal(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }

    private NodeOfflineSignal() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
        return new NodeOfflineSignal();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
        return this.unknownFields;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
        return org.meteor.remote.proto.client.ClientProto.internal_static_meteor_protobuf_NodeOfflineSignal_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
        return org.meteor.remote.proto.client.ClientProto.internal_static_meteor_protobuf_NodeOfflineSignal_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        org.meteor.remote.proto.client.NodeOfflineSignal.class,
                        org.meteor.remote.proto.client.NodeOfflineSignal.Builder.class);
    }

    public static final int NODE_FIELD_NUMBER = 1;
    private org.meteor.remote.proto.NodeMetadata node_;

    /**
     * <code>.meteor.protobuf.NodeMetadata node = 1;</code>
     *
     * @return Whether the node field is set.
     */
    @java.lang.Override
    public boolean hasNode() {
        return node_ != null;
    }

    /**
     * <code>.meteor.protobuf.NodeMetadata node = 1;</code>
     *
     * @return The node.
     */
    @java.lang.Override
    public org.meteor.remote.proto.NodeMetadata getNode() {
        return node_ == null ? org.meteor.remote.proto.NodeMetadata.getDefaultInstance() : node_;
    }

    /**
     * <code>.meteor.protobuf.NodeMetadata node = 1;</code>
     */
    @java.lang.Override
    public org.meteor.remote.proto.NodeMetadataOrBuilder getNodeOrBuilder() {
        return getNode();
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) {
            return true;
        }
        if (isInitialized == 0) {
            return false;
        }

        memoizedIsInitialized = 1;
        return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
        if (node_ != null) {
            output.writeMessage(1, getNode());
        }
        getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) {
            return size;
        }

        size = 0;
        if (node_ != null) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(1, getNode());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof org.meteor.remote.proto.client.NodeOfflineSignal)) {
            return super.equals(obj);
        }
        org.meteor.remote.proto.client.NodeOfflineSignal other = (org.meteor.remote.proto.client.NodeOfflineSignal) obj;

        if (hasNode() != other.hasNode()) {
            return false;
        }
        if (hasNode()) {
            if (!getNode()
                    .equals(other.getNode())) {
                return false;
            }
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) {
            return false;
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        if (memoizedHashCode != 0) {
            return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasNode()) {
            hash = (37 * hash) + NODE_FIELD_NUMBER;
            hash = (53 * hash) + getNode().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
    }

    public static org.meteor.remote.proto.client.NodeOfflineSignal parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static org.meteor.remote.proto.client.NodeOfflineSignal parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.meteor.remote.proto.client.NodeOfflineSignal parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static org.meteor.remote.proto.client.NodeOfflineSignal parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.meteor.remote.proto.client.NodeOfflineSignal parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static org.meteor.remote.proto.client.NodeOfflineSignal parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static org.meteor.remote.proto.client.NodeOfflineSignal parseFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static org.meteor.remote.proto.client.NodeOfflineSignal parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.meteor.remote.proto.client.NodeOfflineSignal parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.meteor.remote.proto.client.NodeOfflineSignal parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.meteor.remote.proto.client.NodeOfflineSignal parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static org.meteor.remote.proto.client.NodeOfflineSignal parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(org.meteor.remote.proto.client.NodeOfflineSignal prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
    }

    /**
     * Protobuf type {@code meteor.protobuf.NodeOfflineSignal}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:meteor.protobuf.NodeOfflineSignal)
            org.meteor.remote.proto.client.NodeOfflineSignalOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return org.meteor.remote.proto.client.ClientProto.internal_static_meteor_protobuf_NodeOfflineSignal_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return org.meteor.remote.proto.client.ClientProto.internal_static_meteor_protobuf_NodeOfflineSignal_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            org.meteor.remote.proto.client.NodeOfflineSignal.class,
                            org.meteor.remote.proto.client.NodeOfflineSignal.Builder.class);
        }

        // Construct using org.meteor.remote.proto.client.NodeOfflineSignal.newBuilder()
        private Builder() {

        }

        private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

        }

        @java.lang.Override
        public Builder clear() {
            super.clear();
            if (nodeBuilder_ == null) {
                node_ = null;
            } else {
                node_ = null;
                nodeBuilder_ = null;
            }
            return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
            return org.meteor.remote.proto.client.ClientProto.internal_static_meteor_protobuf_NodeOfflineSignal_descriptor;
        }

        @java.lang.Override
        public org.meteor.remote.proto.client.NodeOfflineSignal getDefaultInstanceForType() {
            return org.meteor.remote.proto.client.NodeOfflineSignal.getDefaultInstance();
        }

        @java.lang.Override
        public org.meteor.remote.proto.client.NodeOfflineSignal build() {
            org.meteor.remote.proto.client.NodeOfflineSignal result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }

        @java.lang.Override
        public org.meteor.remote.proto.client.NodeOfflineSignal buildPartial() {
            org.meteor.remote.proto.client.NodeOfflineSignal result =
                    new org.meteor.remote.proto.client.NodeOfflineSignal(this);
            if (nodeBuilder_ == null) {
                result.node_ = node_;
            } else {
                result.node_ = nodeBuilder_.build();
            }
            onBuilt();
            return result;
        }

        @java.lang.Override
        public Builder clone() {
            return super.clone();
        }

        @java.lang.Override
        public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
            return super.setField(field, value);
        }

        @java.lang.Override
        public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
        }

        @java.lang.Override
        public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
        }

        @java.lang.Override
        public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
        }

        @java.lang.Override
        public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
            return super.addRepeatedField(field, value);
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof org.meteor.remote.proto.client.NodeOfflineSignal) {
                return mergeFrom((org.meteor.remote.proto.client.NodeOfflineSignal) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }

        public Builder mergeFrom(org.meteor.remote.proto.client.NodeOfflineSignal other) {
            if (other == org.meteor.remote.proto.client.NodeOfflineSignal.getDefaultInstance()) {
                return this;
            }
            if (other.hasNode()) {
                mergeNode(other.getNode());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
            return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            input.readMessage(
                                    getNodeFieldBuilder().getBuilder(),
                                    extensionRegistry);

                            break;
                        } // case 10
                        default: {
                            if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                done = true; // was an endgroup tag
                            }
                            break;
                        } // default:
                    } // switch (tag)
                } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.unwrapIOException();
            } finally {
                onChanged();
            } // finally
            return this;
        }

        private org.meteor.remote.proto.NodeMetadata node_;
        private com.google.protobuf.SingleFieldBuilderV3<
                org.meteor.remote.proto.NodeMetadata, org.meteor.remote.proto.NodeMetadata.Builder, org.meteor.remote.proto.NodeMetadataOrBuilder>
                nodeBuilder_;

        /**
         * <code>.meteor.protobuf.NodeMetadata node = 1;</code>
         *
         * @return Whether the node field is set.
         */
        public boolean hasNode() {
            return nodeBuilder_ != null || node_ != null;
        }

        /**
         * <code>.meteor.protobuf.NodeMetadata node = 1;</code>
         *
         * @return The node.
         */
        public org.meteor.remote.proto.NodeMetadata getNode() {
            if (nodeBuilder_ == null) {
                return node_ == null ? org.meteor.remote.proto.NodeMetadata.getDefaultInstance() : node_;
            } else {
                return nodeBuilder_.getMessage();
            }
        }

        /**
         * <code>.meteor.protobuf.NodeMetadata node = 1;</code>
         */
        public Builder setNode(org.meteor.remote.proto.NodeMetadata value) {
            if (nodeBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                node_ = value;
                onChanged();
            } else {
                nodeBuilder_.setMessage(value);
            }

            return this;
        }

        /**
         * <code>.meteor.protobuf.NodeMetadata node = 1;</code>
         */
        public Builder setNode(
                org.meteor.remote.proto.NodeMetadata.Builder builderForValue) {
            if (nodeBuilder_ == null) {
                node_ = builderForValue.build();
                onChanged();
            } else {
                nodeBuilder_.setMessage(builderForValue.build());
            }

            return this;
        }

        /**
         * <code>.meteor.protobuf.NodeMetadata node = 1;</code>
         */
        public Builder mergeNode(org.meteor.remote.proto.NodeMetadata value) {
            if (nodeBuilder_ == null) {
                if (node_ != null) {
                    node_ =
                            org.meteor.remote.proto.NodeMetadata.newBuilder(node_).mergeFrom(value).buildPartial();
                } else {
                    node_ = value;
                }
                onChanged();
            } else {
                nodeBuilder_.mergeFrom(value);
            }

            return this;
        }

        /**
         * <code>.meteor.protobuf.NodeMetadata node = 1;</code>
         */
        public Builder clearNode() {
            if (nodeBuilder_ == null) {
                node_ = null;
                onChanged();
            } else {
                node_ = null;
                nodeBuilder_ = null;
            }

            return this;
        }

        /**
         * <code>.meteor.protobuf.NodeMetadata node = 1;</code>
         */
        public org.meteor.remote.proto.NodeMetadata.Builder getNodeBuilder() {

            onChanged();
            return getNodeFieldBuilder().getBuilder();
        }

        /**
         * <code>.meteor.protobuf.NodeMetadata node = 1;</code>
         */
        public org.meteor.remote.proto.NodeMetadataOrBuilder getNodeOrBuilder() {
            if (nodeBuilder_ != null) {
                return nodeBuilder_.getMessageOrBuilder();
            } else {
                return node_ == null ?
                        org.meteor.remote.proto.NodeMetadata.getDefaultInstance() : node_;
            }
        }

        /**
         * <code>.meteor.protobuf.NodeMetadata node = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
                org.meteor.remote.proto.NodeMetadata, org.meteor.remote.proto.NodeMetadata.Builder, org.meteor.remote.proto.NodeMetadataOrBuilder>
        getNodeFieldBuilder() {
            if (nodeBuilder_ == null) {
                nodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                        org.meteor.remote.proto.NodeMetadata, org.meteor.remote.proto.NodeMetadata.Builder, org.meteor.remote.proto.NodeMetadataOrBuilder>(
                        getNode(),
                        getParentForChildren(),
                        isClean());
                node_ = null;
            }
            return nodeBuilder_;
        }

        @java.lang.Override
        public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:meteor.protobuf.NodeOfflineSignal)
    }

    // @@protoc_insertion_point(class_scope:meteor.protobuf.NodeOfflineSignal)
    private static final org.meteor.remote.proto.client.NodeOfflineSignal DEFAULT_INSTANCE;

    static {
        DEFAULT_INSTANCE = new org.meteor.remote.proto.client.NodeOfflineSignal();
    }

    public static org.meteor.remote.proto.client.NodeOfflineSignal getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeOfflineSignal>
            PARSER = new com.google.protobuf.AbstractParser<NodeOfflineSignal>() {
        @java.lang.Override
        public NodeOfflineSignal parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
                builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<NodeOfflineSignal> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<NodeOfflineSignal> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.meteor.remote.proto.client.NodeOfflineSignal getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

